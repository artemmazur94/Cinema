using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using System.Web.Routing;
using Cinema.DataAccess;
using Cinema.Services;
using Cinema.Web.Helpers;
using Cinema.Web.Models;

namespace Cinema.Web.Controllers
{
    public class PersonController : Controller
    {
        private readonly PersonService _personService;

        protected override void Initialize(RequestContext requestContext)
        {
            base.Initialize(requestContext);
            LanguageHelper.InitializeCulture(HttpContext);
        }

        public PersonController(PersonService personService)
        {
            _personService = personService;
        }

        // GET: People
        public ActionResult Index()
        {
            List<Person> persons = _personService.GetAllPersons();
            List<PersonLocalization> personLocalizations = _personService.GetAllPersonLocalizations(LanguageHelper.CurrnetCulture);

            List<int> movieIds =
                (from person in persons
                 from movieAsActor in person.ActorInMovies
                 select movieAsActor.Id).Distinct().ToList();

            movieIds.AddRange(
                (from person in persons
                 from movieAsDirector in person.DirectorOfMovies
                 select movieAsDirector.Id).Distinct());

            List<MovieLocalization> movieLocalizations = _personService.GetMovieLocalizationsForPersons(movieIds,
                LanguageHelper.CurrnetCulture);

            var models = (from person in persons
                select new PerosonListViewModel()
                {
                    Id = person.Id,
                    Photo = person.Photo,
                    Name = personLocalizations.FirstOrDefault(x => x.PersonId == person.Id).Name,
                    ActorInMovies =
                        (from movieLocalization in
                            movieLocalizations.Where(
                                x => person.ActorInMovies.Contains(
                                    person.ActorInMovies.FirstOrDefault(z => z.Id == x.MovieId)))
                            select movieLocalization.Name).ToList(),
                    DirectorOfMovies =
                        (from movieLocaliztion in
                            movieLocalizations.Where(
                                x => person.DirectorOfMovies.Contains(
                                    person.DirectorOfMovies.FirstOrDefault(z => z.Id == x.MovieId)))
                            select movieLocaliztion.Name).ToList()
                }).ToList();

            return View(models);
        }

        // GET: People/Create
        public ActionResult Create()
        {
            return View("CreateEdit");
        }

        //// POST: People/Create
        //// To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        //// more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult Create([Bind(Include = "Id,PhotoId")] Person person)
        //{
        //    if (ModelState.IsValid)
        //    {
        //        db.Persons.Add(person);
        //        db.SaveChanges();
        //        return RedirectToAction("Index");
        //    }

        //    ViewBag.PhotoId = new SelectList(db.Photos, "Id", "Path", person.PhotoId);
        //    return View(person);
        //}

        //// GET: People/Edit/5
        //public ActionResult Edit(int? id)
        //{
        //    if (id == null)
        //    {
        //        return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        //    }
        //    Person person = db.Persons.Find(id);
        //    if (person == null)
        //    {
        //        return HttpNotFound();
        //    }
        //    ViewBag.PhotoId = new SelectList(db.Photos, "Id", "Path", person.PhotoId);
        //    return View(person);
        //}

        //// POST: People/Edit/5
        //// To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        //// more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult Edit([Bind(Include = "Id,PhotoId")] Person person)
        //{
        //    if (ModelState.IsValid)
        //    {
        //        db.Entry(person).State = EntityState.Modified;
        //        db.SaveChanges();
        //        return RedirectToAction("Index");
        //    }
        //    ViewBag.PhotoId = new SelectList(db.Photos, "Id", "Path", person.PhotoId);
        //    return View(person);
        //}

        //// GET: People/Delete/5
        //public ActionResult Delete(int? id)
        //{
        //    if (id == null)
        //    {
        //        return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        //    }
        //    Person person = db.Persons.Find(id);
        //    if (person == null)
        //    {
        //        return HttpNotFound();
        //    }
        //    return View(person);
        //}

        //// POST: People/Delete/5
        //[HttpPost, ActionName("Delete")]
        //[ValidateAntiForgeryToken]
        //public ActionResult DeleteConfirmed(int id)
        //{
        //    Person person = db.Persons.Find(id);
        //    db.Persons.Remove(person);
        //    db.SaveChanges();
        //    return RedirectToAction("Index");
        //}

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                _personService.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
